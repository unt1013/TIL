SELECT * FROM EMP;
SELECT SAL * 0.5, ROUND(SAL * 0.5, 0) FROM EMP

SELECT ROUND(123.321, 1)

SELECT SUBSTR(HIREDATE, 1, 7) FROM EMP

SELECT * FROM EMP WHERE ENAME LIKE CONCAT('%','E','%')

SELECT NOW()
SELECT DATE_FORMAT(NOW(), '%Y/ %m / %d / %H:%i:%s')

SELECT * FROM EMP
SELECT
	IFNULL(COMM, 0), 
	CASE DEPTNO
		WHEN 10 THEN '총무'
		WHEN 20 THEN '운영'
		ELSE '기타' END
	FROM EMP
	
SELECT MAX(SAL), ENAME FROM EMP;

SELECT * FROM EMP WHERE SAL= (SELECT MIN(SAL) FROM EMP)


##------------문제--------------

SELECT COUNT(*) FROM EMP WHERE MGR IS NOT NULL
SELECT SUM(SAL) FROM EMP WHERE SAL < 2000
SELECT COUNT(DEPTNO) FROM EMP WHERE JOB='MANAGER'
SELECT AVG(SAL) FROM EMP WHERE JOB='MANAGER'
SELECT MIN(SAL) FROM EMP
SELECT MAX(SAL) FROM EMP WHERE DEPTNO=30
SELECT COUNT(DISTINCT JOB) FROM EMP

##-------------------------------
SELECT * FROM EMP
SELECT SUM(SAL) FROM EMP
	GROUP BY JOB
	
SELECT JOB, ROUND(AVG(SAL), 2), COUNT(*)
	FROM EMP
	GROUP BY JOB HAVING AVG(SAL)>= 1500
	ORDER BY AVG(SAL) DESC
##------------------문제-----------

SELECT COUNT(*), DEPTNO FROM EMP
	GROUP BY DEPTNO
	
SELECT SUM(SAL), DEPTNO FROM EMP
	GROUP BY DEPTNO
	
SELECT COUNT(*), DEPTNO, JOB
	FROM EMP
	GROUP BY DEPTNO, JOB
	
##--------------문제----------------

CREATE TABLE NOODLE(
	NUM INT,
	NAME VARCHAR(50),
	COMPANY VARCHAR(10),
	KIND VARCHAR(1),
	PRICE INT,
	E_DATE DATETIME
);

INSERT INTO NOODLE VALUES (
 1, '안성탕면', '농심', 'M', 700, NOW() + INTERVAL 3 MONTH);
INSERT INTO NOODLE VALUES (
 1, '김치라면', '삼양', 'M', 700, NOW() + INTERVAL 3 MONTH);
INSERT INTO NOODLE VALUES (
 1, '진라면', '오뚜기', 'C', 800, NOW() + INTERVAL 3 MONTH);
INSERT INTO NOODLE VALUES (
 1, '꼬꼬면', '팔도', 'C', 1000, NOW() + INTERVAL 3 MONTH);
INSERT INTO NOODLE VALUES (
 2, '신라면', '농심', 'C', 1100, NOW() + INTERVAL 3 MONTH);
INSERT INTO NOODLE VALUES (
 2, '삼양라면', '삼양', 'M', 700, NOW() + INTERVAL 3 MONTH);
INSERT INTO NOODLE VALUES (
 3, '너구리', '농심', 'M', 850, NOW() + INTERVAL 3 MONTH);
INSERT INTO NOODLE VALUES (
 3, '나가사키짬뽕', '삼양', 'C', 1300, NOW() + INTERVAL 3 MONTH);
INSERT INTO NOODLE VALUES (
 4, '짜파게티', '농심', 'C', 1200, NOW() + INTERVAL 3 MONTH);

SELECT COMPANY, CONVERT(CONCAT(COUNT(*),'개') USING UTF8) AS 'COUNT'
	FROM NOODLE
	GROUP BY COMPANY HAVING COUNT(*)>=3
	ORDER BY COUNT(*)	
	
SELECT NAME, COMPANY, DATE_FORMAT(E_DATE, '%Y년 %m월 %d일') AS E_DATE
	FROM NOODLE
	WHERE KIND = 'M' AND PRICE >= 800
	
SELECT CONCAT(MAX(PRICE),'원') AS 'PRICE'
	FROM NOODLE
	WHERE KIND='C'


SELECT COMPANY, CONCAT(MIN(PRICE), '원') AS 'PRICE'
	FROM NOODLE
	GROUP BY COMPANY
	ORDER BY COMPANY
	

SELECT COMPANY, CONCAT(SUM(PRICE), '원') AS '제조사별 합계'
	FROM NOODLE
	GROUP BY COMPANY
	ORDER BY SUM(PRICE)
	

SELECT COMPANY, CONCAT(ROUND(AVG(PRICE),0), '원') AS '제조사별 평균'
	FROM NOODLE
	GROUP BY COMPANY
	ORDER BY COMPANY DESC
	
#--------------------------------------------

SELECT WEEK, SUM(DIE) 
	FROM ACCIDENT
	GROUP BY WEEK
	
SELECT AREA1, SUM(DIE)
	FROM ACCIDENT
	GROUP BY AREA1
	
SELECT AREA1, AREA2, SUM(DIE)
	FROM ACCIDENT
	GROUP BY AREA1, AREA2
	
SELECT KIND, COUNT(*)
	FROM ACCIDENT
	GROUP BY KIND
	ORDER BY COUNT(*) DESC
	LIMIT 0, 5
	
SELECT WEEK, COUNT(DIE) AS CDIE
	FROM ACCIDENT
	GROUP BY WEEK
	
----------------------문제-----------------

SELECT COUNT(*) 
	FROM VISITOR_TB
	
SELECT IP_ADDRESS, COUNT(*)
	FROM VISITOR_TB
	GROUP BY IP_ADDRESS HAVING COUNT(*) >= 2
	ORDER BY COUNT(*) DESC

SELECT DATE_FORMAT(VST_TIME, '%Y'), COUNT(*)
	FROM VISITOR_TB
	GROUP BY DATE_FORMAT(VST_TIME,'%Y')
	
SELECT DATE_FORMAT(VST_TIME, '%m'), COUNT(*)
	FROM VISITOR_TB
	GROUP BY DATE_FORMAT(VST_TIME, '%m')
	ORDER BY COUNT(*) DESC
	
SELECT 
	DATE_FORMAT(VST_TIME, '%Y-%m') AS 방문월,
	CASE WHEN VST_PATH = 1 THEN '검색'
		WHEN VST_PATH = 2 THEN '부산관광공사' END AS 방문경로,
	COUNT(*) AS 방문자수
	FROM VISITOR_TB
	GROUP BY DATE_FORMAT(VST_TIME, '%Y-%m'), VST_PATH


SELECT 
	DATE_FORMAT(VST_TIME, '%Y-%m') AS 방문월,
	VST_PATH AS 방문경로,
	COUNT(*) AS 방문자수
	FROM VISITOR_TB
	GROUP BY DATE_FORMAT(VST_TIME, '%Y-%m'), VST_PATH